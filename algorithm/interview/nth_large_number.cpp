// =====================================================================================
// 
//       Filename:  nth_large_number.cpp
// 
//    Description:  let f=2^i*3^j*5^k
//                  given number n, output the nth large number generated by f
//                  for instance: n = 18, output 30, which is the 18th number in 
//                  sequence 1 2 3 4 5 6 8 9 10 12 15 16 18 20 24 25 27 30
// 
//        Version:  1.0
//        Created:  08/15/2011 03:03:24 PM
//       Revision:  none
//       Compiler:  g++
// 
//         Author:  Raymond Wen (), 
//        Company:  
// 
// =====================================================================================

#include	<iostream>
#include	<stdlib.h>

using namespace std;
static const int MAX = 10000;

int get_next(int *a, int n)
{
    int r = n>0?a[n-1]*2:1;
    int i = n-1;
    for(i = n - 1; i >= 0; --i)
    {
        int t = 2*a[i];
        if(t > a[n-1] && t < r)
            r = t;
        t = 3*a[i];
        if(t > a[n-1] && t < r)
            r = t;
        t = 5*a[i];
        if(t < a[n-1])
            break;
        if(t > a[n-1] && t < r)
            r = t;
    }
    return r;
}

int main ( int argc, char *argv[] )
{
    int a[MAX], n;
    n = atoi(argv[1]);
    for(int i = 0; i < n; ++i)
    {
        a[i] = get_next(a, i);
    }
    for(int i = 0; i < n; ++i)
        cout << a[i] << ' ';
    cout << endl;
    return 0;
}				// ----------  end of function main  ----------
